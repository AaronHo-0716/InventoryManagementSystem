IMPORT library for date&time 

DECLARE initCheck function
    TRY 
        open users.txt file in read mode
    IF file doesn't exist 
        DISPLAY(Initializing system...)
        CALL initilization function 

DECLARE initilization function
    DISPLAY(Entering initilization)
    ENTER LOOP
        PROMPTS user to enter new userID
        PROMPTS user to enter new userName
        PROMPTS user to enter password 

        IF userID OR userName OR password is empty
            DISPLAY(Please fill in all the details.)
            CONTINUE LOOP

        EXIT LOOP

    convert user input into a string as(userID,userName,"Admin",password)

    OPEN users.txt IN WRITE MODE
        WRITE string into users.txt
    
    CALL supplierInitialize function
    CALL hospitalInitialize function
    DISPLAY(Initialization complete.)

DECLARE supplierInitialize function
    TRY to open suppliers.txt file in reading mode
    IF suppliers.txt file not found
        DISPLAY(Initializing suppliers.txt)
        ENTER LOOP
            ASK user if they have 3 or 4 suppliers
                IF 3 
                    supplierAmount = 3
                    EXIT LOOP 
                IF 4
                    supplierAmount = 4
                    EXIT LOOP
                IF others
                    DISPLAY(Please enter 3 or 4 only)
                    CONTINUE LOOP
        ENTER LOOP
            PROMPTS user to enter 3 or 4 supplier codes
            PROMPTS user to enter 3 or 4 supplier names 
            PROMPTS user to enter 3 or 4 supplier contact number

            IF supplierCode or supplierName or supplierContact is empty
                CONTINUE LOOP
            ELSE
                EXIT LOOP

        ARRANGE supplier info into a string as(supplierCode[supplierAmount],supplierName[supplierAmount],supplierContact[supplierAmount])

        CALL writeToFile function to save supplier info into suppliers.txt
        DISPLAY(Initialization complete)
    IF ERROR exist
        PRINT OUT ERROR

    EXIT FUNCTION 
    



DECLARE hospitalInitialize function
    TRY to open hospitals.txt in read mode
    IF file doesn't exist
        DISPLAY(Initializing system...)
        ENTER LOOP
            ASK user if they have 3 or 4 hospitals
                IF 3
                    hospitalAmount = 3
                    EXIT LOOP
                IF 4 
                    hospitalAmount = 4
                    EXIT LOOP
                IF OTHERS
                    DISPLAY(Please enter 3 or 4 hospitals only.)
                    CONTINUE LOOP
        ENTER LOOP
            PROMPTS user to enter 3 or 4 hospitals code
            PROMPTS user to enter 3 or 4 hospital names 

            ARRANGE hospital info into a string as(hospitalCode[hospitalAmount],hospitalName[hospitalAmount])

            CALL writeToFile function to save hospitals info to hospitals.txt
            DISPLAY(Initialization complete)
            EXIT LOOP
    IF error exists
        PRINT OUT ERROR
    EXIT FUNCTION

DECLARE readFIle function with ARGUMENT(filePath)
    DECLARE content string
    OPEN(filePath) in read mode
        ENTER LOOP
            DECLARE line variable 
            line = STRIP(filePath) with newline
            IF NOT line
                EXIT LOOP
            ELSE  
                APPEND(line) into content string

    RETURN content string

DECLARE writeToFile function with ARGUMENT(fileName, variableName)
    OPEN(fileName) in write mode
        FOR i in variableName
            WRITE(i) with , as seperation
            WRITE(new line)

DECLARE manageUsers function with ARGUMENT(loginInfo)
    ENTER LOOP
        DISPLAY(Welcome to Admin Panel)
        DISPLAY(1. Add New User)
        DISPLAY(2. Delete User)
        DISPLAY(3. Search User)
        DISPLAY(4. Modify User)
        DISPLAY(5. List User)
        DISPLAY(6. Quit)

        TAKE user input
            INPUT = 1
                CALL addUser function
            INPUT = 2
                CALL delUser function with ARGUMENT(loginInfo)
            INPUT = 3
                CALL searchUser function
            INPUT = 4 
                CALL modifyUser with ARGUMENT(loginInfo)
            INPUT = 5
                CALL listUsers function
            INPUT = 6  
                EXIT
            INPUT = OTHERS
                DISPLAY(Choice entered not valid, pls try again)

DECLARE addUser function
    DECLARE null value userType = None

    ENTER LOOP
        DISPLAY(User Type)
        DISPLAY(1. Admin)
        DISPLAY(2. Staff)
        DISPLAY(3. Quit)
        
        DECLARE choice variable
        TAKE INPUT as choice    
            INPUT = 1
                userType = "Admin
                EXIT LOOP
            INPUT = 2
                userType = "Staff"
                EXIT LOOP
            INPUT = 3
                EXIT LOOP
            INPUT = OTHERS
                DISPLAY(Choice entered not valid, pls try again)            
            
        ENTER LOOP:
            DECLARE variable newUserID = INPUT(Please enter your userID: )
            DECLARE variable newName = INPUT(Please enter your name: )
            DECLARE variable newPwd = (Please enter your password: )

            IF newUserID or newName or newPwd == ""
                DISPLAY(Please fill in all the details)
                CONTINUE LOOP

            DECLARE string users = [newUserID, newName, userType, newPwd]
            DECLARE null value original = None
            DECLARE boolean duplicateUserDetected = False

            CALL readFile fucntion with ARGUMENT("users.txt") as original

            FOR user in original
                IF user[0] == newUserID:
                    DISPLAY(This userID already exists.)
                    duplicateUserDetected = True

            IF duplicateUserDetected = False:
                APPEND(users) into original
                CALL writeToFile fucntion with ARGUMENT("users.txt",original)
                DISPLAY(Added New User)
                EXIT LOOP


DECLARE delUser fucntion with ARGUMENT(loginInfo)
    ENTER LOOP
        DISPLAY(Select the user you want to delete (Type "Quit" to quit): )
        CALL listUsers function

        DECLARE variable delete = INPUT()

        IF delete == Quit
            EXIT LOOP

        TRY
            CONVERT delete into integer
        IF ERROR
            DISPLAY(Value entered is not a valid integer, please try again.)

        ELSE
            CALL readFile function with ARGUMENT(users.txt) as users variable

            TRY
                SEARCH for string containing users[delete] info
            IF IndexError
                DISPLAY(User doesn't exist)

            ELSE
                IF users[delete] == users[loginInfo]
                    DISPLAY(You cannot delete yourself)
                    RESTART LOOP
                ELSE
                    REMOVE element

                CALL writeToFile fucntion with ARGUMENT(users.txt,users)

                DISPLAY(User deleted)
                EXIT LOOP

DECLARE searchUser function
    ENTER LOOP
        DECLARE boolean userFound = False
        DECLARE searchTerm variable = INPUT(Search user by their userID)
        if searchTerm == Quit
            EXIT LOOP
        
        CALL readFile function to open users.txt as users
        FOR user in users
            IF user[0] = searchTerm
                DISPLAY(Found user: user info)
                userFound = True

            IF userFound = False
                DISPLAY(User code not found)

DECLARE modifyUser with ARGUMENT(loginInfo)
    DECLARE boolean flag = True
    ENTER LOOP
        DISPLAY(Select the user you want to modify: )
        CALL listUsers function

        DECLARE variable mod = INPUT()

        IF mod == Quit
            EXIT LOOP

        TRY
            convert mod into integer
        EXCEPT
            DISPLAY("Value entered is not a valid integer, please try again.)
        ELSE
            CALL readFile function to open users.txt

            TRY
                DISPLAY(users[mod] info)
            IF ERROR
                print(Users doesn't exist)
            ELSE
                ENTER LOOP
                    DISPLAY(Select the action to perform: )
                    DISPLAY(1. Change user type)
                    DISPLAY(2. Change password)

                    DECLARE variable choice = INPUT()

                    try
                        IF choice == quit
                            EXIT LOOP
                        ELSE IF choice == 1
                            ENTER LOOP
                                DISPLAY(Select one(Admin, Staff): )
                                DECLARE variable type = INPUT()
                                MATCH type
                                IF INPUT = Admin
                                    change user type to "Admin"
                                    CALL write function to save changes
                                    EXIT LOOP
                                IF INPUT = Staff
                                    DISPLAY(user info)
                                    IF chosen user if the master account
                                        DISPLAY("This account is master account, you cannot change the type of it.)
                                        RESTART LOOP
                                    ELSE IF chosen user is current user
                                    DECLARE variable specialChoice = INPUT(yes/no for confirmation)
                                    MATCH specialChoice
                                        IF specialChoice == Yes
                                            CALL writeToFile function to change selected users to Staff\
                                            EXIT LOOP

                                        IF specialChoice == No
                                            CONTINUE LOOP

                                        IF specialChoice = other input
                                            DISPLAY(Choice not valid, please try again.)
                                            CONTINUE LOOP

                        ELSE
                            CALL wri fucntion to change selected user to Staff
                            EXIT LOOP



DECLARE listUsers function
    DECLARE variable users
    CALL readFile function to open users.txt file
    READ userinfo from each line
    SAVE users info as users
    DISPLAY(users)

DECLARE mainMENU function with PERIMETER(loginInfo)
    ENTER LOOP
        DISPLAY(Welcome to PPE Inventory Management System)
        DISPLAY(1. Inventory)
        DISPLAY(2. Suppliers)
        DISPLAY(3. List Hospitals)
        DISPLAY(4. User Management)
        DISPLAY(5. Log Out)
        
        DECLARE variable choice = INPUT(Select one: )

        TRY
            CONVERT choice into integer
        IF ERROR
            DISPLAY(Value entered not integer, pls try again.)
        ELSE
            MATCH choice
            IF choice == 1
                CALL inventory function
            IF choice == 2
                CALL supplier function
            IF choice == 3
                CALL listHospitals function
            IF choice == 4
                IF user is an Admin
                    CALL manageUsers function
                else 
                    DISPLAY(You are not an admin) 
            IF choice == 5
                EXIT LOOP 
                RETURN TO loginMenu
            IF choice == OTHER INPUT
                DISPLAY(Value entered not a valid choice, pls try again.)

DECLARE loginMenu function
    READ users.txt file
    DISPLAY(Welcome to Inventory Management System)
    DISPLAY(Type "quit" to quit the program)
    ENTER LOOP
        PROMPTS user to enter userID
        IF userID exists
            ENTER LOOP
                PROMPTS user to enter password
                IF input matches password in users.txt file
                    user successfully login
                ELSE
                    DISPLAY(Wrong password, pls try again)
        ELSE IF userID = "quit"
            EXIT program
        IF userID doesn't exist 
            DISPLAY(UserID doesn't exist, pls try again)

inventoryInit function
    CALL supplierInitialize function to check if suppliers.txt exist
    CALL hospitalInitialize fucntion to check if hospitals.txt exist
    TRY to OPEN ppe.txt file in read mode
        IF file does not exist
            ENTER LOOP
                PROMPTS user to enter 6 item code for PPE item
                PROMPTS user to enter 6 item name for PPE item
                PROMPTS user to enter 6 supplier for PPE item

                ENTER LOOP from 0 to 6
                    SAVE PPE item info into a string as(ppe[i],ppeName[i],ppeSupplier[i],100)

                CALL writeToFile function to save string into ppe.txt
                EXIT LOOP
            IF ERROR exists
                PRINT OUT ERROR
    EXIT FUNCTION

inventory function
    CALL inventoryInit function to check if ppe.txt file is created

    ENTER LOOP
        DISPLAY(Inventory Menu)
        DISPLAY(1. Check Stock)
        DISPLAY(2. Receive Items)
        DISPLAY(3. Distribute Items)
        DISPLAY(4. Transaction History)
        DISPLAY(5. Search Transaction Detail of an Item)
        DISPLAY(6. Quit)

        CALL lessThan25 function to check if any item is less than 25

        TAKE user INPUT
            INPUT = 1
                CALL listStock function
            INPUT = 2
                CALL receiveItems function
            INPUT = 3
                CALL distributeItems function
            INPUT = 4
                CALL history function
            INPUT = 5 
                CALL listStock function
                CALL search function
            INPUT = OTHERS
                DISPLAY("Choice entered not valid, pls try again)

lessThan25 function
    CALL readFile fucntion to open ppe.txt in readmode
    
    ENTER LOOP 
        SCAN each line for ppe items number that is below or equal to 25
        PRINT a reminder that the item is running low in stock

receiveItems function
    CALL readFile fucntion to read ppe.txt file
    CALL listStock function
    ENTER LOOP
        PROMPTS user to enter item code that is receiving
            IF input = Quit
                EXIT LOOP
            IF input doesn't exist 
                DISPLAY(Item doesn't exist, pls try again)
                CONTINUE LOOP
        PROMPTS user to input the amount received for the item
        SAVE changes to item amount as string
        CALL writeToFile function to make changes to ppe.txt file
        CALL addTranscation function to save transaction Details

doesItemExists fucntion

distributeItems function
    CALL readFile function to read ppe.txt file
    CALL readFile function to read hospitals.txt file
    CALL listStock function

search function


        
            




                

        


                        
                     
        
        


          