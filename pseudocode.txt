IMPORT library for date&time

DECLARE initCheck function
    TRY 
        open users.txt file in read mode
    IF file doesn't exist 
        DISPLAY(Initializing system...)
        CALL initilization function 

DECLARE initilization function
    DISPLAY(Entering initilization)
    ENTER LOOP
        DECLARE userID variable 
        INPUT(userID)
        DECLARE userName variable 
        INPUT(userName)
        DECLARE password variable 
        INPUT(password)

        IF userID OR userName OR password == ""
            DISPLAY(Please fill in all the details.)
            CONTINUE LOOP

        EXIT LOOP

    DECLARE users string
    JOIN inputs into users string as(userID,userName,"Admin",password)

    OPEN users.txt IN WRITE MODE
        WRITE users string into users.txt
    
    CALL supplierInitialize function
    CALL hospitalInitialize function
    DISPLAY(Initialization complete.)

DECLARE supplierInitialize function
    TRY
        OPEN(suppliers.txt) in read mode
    IF file doesn't exist
        DISPLAY(Initializing suppliers.txt...)
        ENTER LOOP
            DECLARE suppliers string
            TRY 
                ENTER LOOP
                    DECLARE supplierCode list
                    INPUT(supplierCode)
                    DECLARE supplierName list 
                    INPUT(supplierName)
                    DECLARE supplierContact list
                    INPUT(supplierContact)

                    IF supplierCode OR supplierName OR supplierContact == ""
                        DISPLAY(Please fill in all the details.)
                        CONTINUE LOOP
                    ELSE
                        EXIT LOOP
                
                FOR i = 0 to 3
                    ADD(supplierCode[i],supplierName[i],supplierContact[i]) into suppliers string
                    
                CALL writeToFile function with ARGUMENT(suppliers.txt,suppliers)
                DISPLAY(Initializing complete.)
                EXIT LOOP

            IF EXCEPTION exists
                    DISPLAY(EXCEPTION)

    EXIT FUNCTION 

DECLARE hospitalInitialize function
    TRY
        OPEN(hospitals.txt) in read mode
    IF file doesn't exist
        DISPLAY(Initializing system...)
        ENTER LOOP
            DECLARE hospitals string
            try: 
                DECLARE hospitalCode list
                INPUT(hospitalCode)
                DECLARE hospitalName list
                INPUT(hospitalName)

                FOR i = 0 to 3
                APPEND(hospitalCode[i],hospitalName[i]) into hospitals string

                CALL writeToFile function with ARGUMENT(hospitals.txt,hospitals)
                DISPLAY(Initizing complete.)
                EXIT LOOP

            IF EXCEPTION exists
                DISPLAY(EXCEPTION)

    EXIT FUNCTION

DECLARE readFIle function with ARGUMENT(filePath)
    DECLARE content string
    OPEN(filePath) in read mode
        ENTER LOOP
            DECLARE line variable 
            line = STRIP(filePath) with newline
            IF NOT line
                EXIT LOOP
            ELSE  
                APPEND(line) into content string

    RETURN content string

DECLARE writeToFile function with ARGUMENT(fileName, variableName)
    OPEN(fileName) in write mode
        FOR i in variableName
            WRITE(i) with , as seperation
            WRITE(new line)

DECLARE manageUsers function with ARGUMENT(loginInfo)
    ENTER LOOP
        DISPLAY(Welcome to Admin Panel)
        DISPLAY(1. Add New User)
        DISPLAY(2. Delete User)
        DISPLAY(3. Search User)
        DISPLAY(4. Modify User)
        DISPLAY(5. List User)
        DISPLAY(6. Quit)


        DECLARE choice variable
        TAKE INPUT as choice
            INPUT = 1
                CALL addUser function
            INPUT = 2
                CALL delUser function with ARGUMENT(loginInfo)
            INPUT = 3
                CALL searchUser function
            INPUT = 4 
                CALL modifyUser with ARGUMENT(loginInfo)
            INPUT = 5
                CALL listUsers function
            INPUT = 6  
                EXIT
            INPUT = OTHERS
                DISPLAY(Choice entered not valid, pls try again)

DECLARE addUser function
    DECLARE null value userType = None

    ENTER LOOP
        DISPLAY(User Type)
        DISPLAY(1. Admin)
        DISPLAY(2. Staff)
        DISPLAY(3. Quit)
        
        DECLARE choice variable
        TAKE INPUT as choice    
            INPUT = 1
                userType = "Admin
                EXIT LOOP
            INPUT = 2
                userType = "Staff"
                EXIT LOOP
            INPUT = 3
                EXIT LOOP
            INPUT = OTHERS
                DISPLAY(Choice entered not valid, pls try again)            
            
        ENTER LOOP:
            DECLARE variable newUserID = INPUT(Please enter your userID: )
            DECLARE variable newName = INPUT(Please enter your name: )
            DECLARE variable newPwd = (Please enter your password: )

            IF newUserID or newName or newPwd == ""
                DISPLAY(Please fill in all the details)
                CONTINUE LOOP

            DECLARE string users = [newUserID, newName, userType, newPwd]
            DECLARE null value original = None
            DECLARE boolean duplicateUserDetected = False

            CALL readFile fucntion with ARGUMENT("users.txt") as original

            FOR user in original
                IF user[0] == newUserID:
                    DISPLAY(This userID already exists.)
                    duplicateUserDetected = True

            IF duplicateUserDetected = False:
                APPEND(users) into original
                CALL writeToFile fucntion with ARGUMENT("users.txt",original)
                DISPLAY(Added New User)
                EXIT LOOP


DECLARE delUser fucntion with ARGUMENT(loginInfo)
    ENTER LOOP
        DISPLAY(Select the user you want to delete (Type "Quit" to quit): )
        CALL listUsers function

        DECLARE variable delete = INPUT()

        IF delete == Quit
            EXIT LOOP

        TRY
            CONVERT delete into integer
        IF ERROR
            DISPLAY(Value entered is not a valid integer, please try again.)

        ELSE
            CALL readFile function with ARGUMENT(users.txt) as users variable

            TRY
                SEARCH for string containing users[delete] info
            IF IndexError
                DISPLAY(User doesn't exist)

            ELSE
                IF users[delete] == users[loginInfo]
                    DISPLAY(You cannot delete yourself)
                    RESTART LOOP
                ELSE
                    REMOVE element

                CALL writeToFile fucntion with ARGUMENT(users.txt,users)

                DISPLAY(User deleted)
                EXIT LOOP

DECLARE searchUser function
    ENTER LOOP
        DECLARE boolean userFound = False
        DECLARE searchTerm variable = INPUT(Search user by their userID)
        if searchTerm == Quit
            EXIT LOOP
        
        CALL readFile function to open users.txt as users
        FOR user in users
            IF user[0] = searchTerm
                DISPLAY(Found user: user info)
                userFound = True

            IF userFound = False
                DISPLAY(User code not found)

DECLARE modifyUser with ARGUMENT(loginInfo)
    DECLARE boolean flag = True
    ENTER LOOP
        DISPLAY(Select the user you want to modify: )
        CALL listUsers function

        DECLARE variable mod = INPUT()

        IF mod == Quit
            EXIT LOOP

        TRY
            convert mod into integer
        EXCEPT
            DISPLAY("Value entered is not a valid integer, please try again.)
        ELSE
            CALL readFile function to open users.txt

            TRY
                DISPLAY(users[mod] info)
            IF ERROR
                print(Users doesn't exist)
            ELSE
                ENTER LOOP
                    DISPLAY(Select the action to perform: )
                    DISPLAY(1. Change user type)
                    DISPLAY(2. Change password)

                    DECLARE variable choice = INPUT()

                    try
                        IF choice == quit
                            EXIT LOOP
                        ELSE IF choice == 1
                            ENTER LOOP
                                DISPLAY(Select one(Admin, Staff): )
                                DECLARE variable type = INPUT()
                                TAKE INPUT as type
                                IF INPUT = Admin
                                    change user type to "Admin"
                                    CALL write function to save changes
                                    EXIT LOOP
                                IF INPUT = Staff
                                    DISPLAY(user info)
                                    IF chosen user if the master account
                                        DISPLAY("This account is master account, you cannot change the type of it.)
                                        RESTART LOOP
                                    ELSE IF chosen user is current user
                                    DECLARE variable specialChoice = INPUT(yes/no for confirmation)
                                    


                        
                     
        
        


          